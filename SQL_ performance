积累的平时SQL优化方法论:

最重要的一点: 应用决定一切 ，需求的作用和应用方案调整的对DB调优的作用最大，也最简单。
累死累活搞的性能参数调整。然后产品需求变动，然后就没有然后了。

  数据库调优大致有四类优化：
  a. 优化系统内核的锁，尽量减少需要保护的临界资源，提升并发性能；
  b. 改进优化器处理复杂查询的能力，以便生成尽可能高效的查询计划；
  c. 提升系统表达式的计算性能，HASH处理、分组、排序性能。发挥系统的潜力，还需要DBA对系统有充分的了解和实践经验的不断积累。
  d. 如何更快/更简单地设计靠谱的索引

  MySQL的监控2个方面：数据采集与分析，采集三个维度：硬件：demsg，message，raid，网卡链路，主机存活等。系统：cpu(load)，磁盘(IO及空间)，
  内存，进程状态,网卡流量。

  MySQL：活动连接数,error.log, log sync,table space,lave status,心跳连接，端口存活，innodb status,variables，status等

  在我看来, 就一点, 索引本身带来的代价(变更频度,索引维护单次开销,索引空间,并发开销),
  索引带来的好处(查询的开销变化, 查询的频度), 这两者的交叉点, 就是选择使用/不使用新的索引的交叉点.

 
